@model AllPaczkinoMVC.DTO.ParcelCreationRequest

<head>
	<!-- Include jQuery library -->
	<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

@{
    ViewData["Title"] = "Create";
}

<h4>Parcel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
		<form asp-action="Create">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>

			<h5>Nazwa paczki</h5>
			<h8>(opcjonalnie)</h8>
			<div class="card" style="width: 18rem;">
				<!--<img src="..." class="card-img-top" alt="...">-->
				<div class="card-body">
					<input asp-for="Name" class="form-control" />
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
			</div>

			<h6> </h6>

			<table border="1">
				<tr>
					<td>

						<h5>Paczkomat nadawcy</h5>
						<div class="card" style="width: 18rem;">

								<!-- City dropdown -->
								<div class="form-group">
									@Html.LabelFor(model => model.SelectedSenderCity, "Select Sender City")
									@Html.DropDownListFor(model => model.SelectedSenderCity, Model.Cities, "-- Select City --", new { @class = "form-control", id = "senderCityDropdown" })
								</div>

								<!-- Parcellockers  dropdown -->
								<div class="form-group">
									@Html.LabelFor(model => model.ParcelLockersInSelectedSenderCity, "Select parcel locker in selected city")
									@Html.DropDownListFor(model => model.ParcelLockersInSelectedSenderCity, Model.ParcelLockersInSelectedSenderCity, "-- Select parcel locker in selected city --", new { @class = "form-control", id = "senderParcelLockersDropdown" })
								</div>

							<script>
									// jQuery script for cascading dropdowns
									$(document).ready(function () {
										$("#senderCityDropdown").change(function () {
											var selectedSenderCity = $(this).val();
											$.ajax({
												url: '@Url.Action("GetParcelLockersInSelectedSenderCity", "Parcels")',
												type: 'GET',
												data: { city: selectedSenderCity },
												success: function (data) {
													$("#senderParcelLockersDropdown").empty();
													$.each(data, function (i, item) {
														$("#senderParcelLockersDropdown").append($('<option>').text(item.address).val(item.id));
													});

													// Update the value of SenderLockerId based on the first item in the data
													if (data.length > 0) {
														var firstItemId = data[0].id;
														$("#SenderLockerId").val(firstItemId);
													}
												},
												error: function (error) {
													console.log(error);
												}
											});
										});

										// Add change event for the second dropdown to update ReceiverLockerId
										$("#senderParcelLockersDropdown").change(function () {
											var selectedSenderLockerId = $(this).val();
											$("#SenderLockerId").val(selectedSenderLockerId);
										});
									});
								</script>

							<div class="card-body">
								<input asp-for="SenderLockerId" class="form-control" /> 
								<span asp-validation-for="SenderLockerId" class="text-danger"></span>
							</div>
						</div>

					</td>

					<td>

						<h5>Paczkomat odbiorcy</h5>
							<div class="card" style="width: 18rem;">

								<!-- City dropdown -->
								<div class="form-group">
									@Html.LabelFor(model => model.SelectedReceiverCity, "Select Receiver City")
									@Html.DropDownListFor(model => model.SelectedReceiverCity, Model.Cities, "-- Select City --", new { @class = "form-control", id = "receiverCityDropdown" })
								</div>

								<!-- Parcellockers  dropdown -->
								<div class="form-group">
									@Html.LabelFor(model => model.ParcelLockersInSelectedReceiverCity, "Select parcel locker in selected city")
									@Html.DropDownListFor(model => model.ParcelLockersInSelectedReceiverCity, Model.ParcelLockersInSelectedReceiverCity, "-- Select parcel locker in selected city --", new { @class = "form-control", id = "receiverParcelLockersDropdown" })
								</div>

								<script>
									// jQuery script for cascading dropdowns
									$(document).ready(function () {
										$("#receiverCityDropdown").change(function () {
											var selectedReceiverCity = $(this).val();
											$.ajax({
												url: '@Url.Action("GetParcelLockersInSelectedReceiverCity", "Parcels")',
												type: 'GET',
												data: { city: selectedReceiverCity },
												success: function (data) {
													$("#receiverParcelLockersDropdown").empty();
													$.each(data, function (i, item) {
														$("#receiverParcelLockersDropdown").append($('<option>').text(item.address).val(item.id));
													});

													// Update the value of ReceiverLockerId based on the first item in the data
													if (data.length > 0) {
														var firstItemId = data[0].id;
														$("#ReceiverLockerId").val(firstItemId);
													}
												},
												error: function (error) {
													console.log(error);
												}
											});
										});

										// Add change event for the second dropdown to update ReceiverLockerId
										$("#receiverParcelLockersDropdown").change(function () {
											var selectedReceiverLockerId = $(this).val();
											$("#ReceiverLockerId").val(selectedReceiverLockerId);
										});
									});
								</script>

								<div class="card-body">
									<input asp-for="ReceiverLockerId" class="form-control" /> 
									<span asp-validation-for="ReceiverLockerId" class="text-danger"></span>
								</div>
						</div>

					</td>
				</tr>
			</table>

			<h6> </h6>

			@*  <div class="form-group">
			<label asp-for="SendTime" class="control-label"></label>
			<input asp-for="SendTime" class="form-control" />
			<span asp-validation-for="SendTime" class="text-danger"></span>
			</div>
			<div class="form-group">
			<label asp-for="ReceiveTime" class="control-label"></label>
			<input asp-for="ReceiveTime" class="form-control" />
			<span asp-validation-for="ReceiveTime" class="text-danger"></span>
			</div> *@
			@*   <div class="form-group">
			<label asp-for="ParcelStatus" class="control-label"></label>
			<input asp-for="ParcelStatus" class="form-control" />
			<span asp-validation-for="ParcelStatus" class="text-danger"></span>
			</div> *@

			<table border="1">
				<tr>
					<td>

						<h5>Nadawca</h5>
						<div class="card" style="width: 18rem;">
							<!--<img src="..." class="card-img-top" alt="...">-->
							<h8>* Imię:</h8>
							<div class="card-body">
								<input asp-for="SenderName" class="form-control" />
								<span asp-validation-for="SenderName" class="text-danger"></span>
							</div>
						</div>

					</td>

					<td>

						<h5>Odbiorca</h5>
						<div class="card" style="width: 18rem;">
							<!--<img src="..." class="card-img-top" alt="...">-->
							<h8>* Imię:</h8>
							<div class="card-body">
								<input asp-for="ReceiverName" class="form-control" />
								<span asp-validation-for="ReceiverName" class="text-danger"></span>
							</div>
							
						</div>

					</td>
				</tr>
			</table>

			<h6> </h6>

			<h5>Rozmiar paczki</h5>
			<div class="form-group">
				<label asp-for="ParcelSize" class="control-label"></label>
				<input asp-for="ParcelSize" class="form-control" />
				@* <span asp-validation-for="ParcelSize.Name" class="text-danger"></span> *@
				<div asp-validation-summary="ModelOnly"> </div>
			</div>
			<div class="form-group">
				@* <input asp-for="ParcelSize" class="form-control" />
				<span asp-validation-for="ParcelSize" class="text-danger"></span> *@
				@* <div class="card-body">
				<a href="#" class="btn btn-primary">Rozmiar S</a>
				<a href="#" class="btn btn-primary">Rozmiar M</a>
				<a href="#" class="btn btn-primary">Rozmiar L</a>
				</div> *@
			</div>

			<h6> </h6>
			<div class="form-group">
				<input type="submit" value="Nadaj paczkę" class="btn btn-primary" />
			</div>

		</form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

</head>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
